{"version":3,"sources":["BooksAPI.js","Changer.js","Book.js","BookShelf.js","GirdLoader.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","signal","Changer","handleChange","e","_this","props","target","value","updateHandler","react_default","a","createElement","className","defaultValue","this","onChange","disabled","Component","Book","style","width","height","backgroundImage","imageLinks","smallThumbnail","src_Changer","title","subtitle","authors","join","react_stars_default","count","size","isHalf","edit","averageRating","emptyIcon","halfIcon","fullIcon","activeColor","ratingsCount","Grid","searchBooks","map","key","src_Book","Shelf","bookshelf_title","filter","BookShelf","isShelf","shelfNames","GridLoader","state","err","req","abort","AbortController","promise","Promise","_ref","asyncToGenerator","regenerator_default","mark","_callee","resolve","wrap","_context","prev","next","t0","BooksAPI","catch","console","log","t1","sent","stop","_x","apply","arguments","cancel","handleSimilarities","arr1","arr","Map","arr2","shelfBooks","i","length","e1","set","j","e2","has","Array","from","values","_this2","externalData","hasOwnProperty","setState","error","curr","BooksApp","searchBookUpdateHandler","shelfBookUpdateHandler","q","updateQuery","clearQuery","updateSearchBooks","array","_this3","Route","exact","path","render","history","src_BookShelf","Link","onClick","push","to","pathname","_ref2","react","type","placeholder","GirdLoader","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ef36b436.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query, signal) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    signal,\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from \"react\";\r\n\r\nclass Changer extends Component {\r\n\r\n    handleChange = (e) => {\r\n        this.props.book.shelf = e.target.value;\r\n        this.props.updateHandler(this.props.book);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"book-shelf-changer\" >\r\n                <select defaultValue={this.props.book.shelf?this.props.book.shelf:'none'} onChange={this.handleChange}>\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                </select>\r\n                {/* <div>\r\n                    {this.props.book.shelf}\r\n                </div> */}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Changer;\r\n","import React, { Component } from \"react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport Changer from './Changer'\r\nclass Book extends Component {\r\n\r\n    render() {\r\n        const { book } = this.props;\r\n        return (\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url('${book.imageLinks ? book.imageLinks.smallThumbnail : null}')` }}></div>\r\n                    <Changer book={book} updateHandler={this.props.updateHandler} />\r\n                </div>\r\n                <div className=\"book-title\">{`${book.title}${book.subtitle ? `: ${book.subtitle}` : ''}`}</div>\r\n                <div className=\"book-authors\">\r\n                    {(book && book.authors) && book.authors.join(', ')}\r\n                </div>\r\n                <div className='rating-container'>\r\n                    <span>\r\n                        <ReactStars\r\n                            count={5}\r\n                            size={24}\r\n                            isHalf={true}\r\n                            disabled={true}\r\n                            edit={false}\r\n                            value={book.averageRating ? book.averageRating : 0}\r\n                            emptyIcon={<i className=\"far fa-star\"></i>}\r\n                            halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\r\n                            fullIcon={<i className=\"fa fa-star\"></i>}\r\n                            activeColor=\"#ffd700\"\r\n                        />\r\n                    </span>\r\n                    <span>({book.ratingsCount ? book.ratingsCount : 0})</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Book;","import React, { Component } from \"react\";\r\nimport Book from \"./Book\";\r\nfunction Grid(props) {\r\n  return (\r\n    <div className=\"search-books-results\">\r\n      {\r\n        (\r\n          <ol className=\"books-grid\">\r\n            {props.searchBooks && props.searchBooks.map((a) => (\r\n              <li key={a.id}>\r\n                <Book updateHandler={props.updateHandler} book={a} />\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\nfunction Shelf(props) {\r\n  const { books, shelf, bookshelf_title } = props;\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{bookshelf_title}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books && books.filter(a => a.shelf === shelf).map((a) => (\r\n            <li key={a.id}>\r\n              <Book updateHandler={props.updateHandler} book={a} />\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nclass BookShelf extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.props.isShelf ?\r\n            this.props.shelfNames.map((e) => (\r\n              <Shelf key={e.shelf} books={this.props.books} updateHandler={this.props.updateHandler} shelf={e.shelf} bookshelf_title={e.bookshelf_title} />\r\n            )) : (\r\n              <Grid books={this.props.books} searchBooks={this.props.searchBooks} updateHandler={this.props.updateHandler} />\r\n            )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookShelf;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nclass GridLoader extends Component {\r\n    state = {\r\n        data: null,\r\n        err: null,\r\n    }\r\n    req = () => {\r\n        this.abort = new AbortController();\r\n        this.signal = this.abort.signal;\r\n        this.promise = new Promise(async (resolve) => {\r\n            resolve(await BooksAPI.search(this.props.query, this.signal).catch((e) => { console.log('canceled') }))\r\n        }).catch((e) => { console.log('canceled') });\r\n        this.promise.catch((e) => { console.log('canceled') })\r\n        this.promise.cancel = () => this.abort.abort();\r\n        return this.promise.catch((e) => { console.log('canceled') });\r\n    }\r\n    handleSimilarities = (arr1) => {\r\n        const arr = new Map()\r\n        const arr2 = this.props.shelfBooks;\r\n        if (arr1 && arr2) {\r\n            for (let i = 0; i < arr1.length; i++) {\r\n                const e1 = arr1[i];\r\n                arr.set(e1.id, e1);\r\n            }\r\n            for (let j = 0; j < arr2.length; j++) {\r\n                const e2 = arr2[j];\r\n                if (arr.has(e2.id)) {\r\n                    arr.set(e2.id, e2)\r\n                }\r\n            }\r\n            return Array.from(arr.values());\r\n        }\r\n    }\r\n    componentDidUpdate(prev) {\r\n        console.log(this.props)\r\n        if (this.props.query !== prev.query) {\r\n            if (this.props.query) {\r\n                if (this.promise) {\r\n                    this.promise.cancel()\r\n                }\r\n                this.req()\r\n                    .then(externalData => {\r\n                        if (!externalData.hasOwnProperty('error')) {\r\n                            this.promise = null;\r\n                            if (this.state.err) this.setState({ err: null })\r\n                            externalData = this.handleSimilarities(externalData)\r\n                            this.props.update(externalData)\r\n                            console.log(externalData)\r\n                            this.setState((curr) => ({\r\n                                data: externalData\r\n                            }));\r\n                        } else {\r\n                            this.props.update([])\r\n                            this.setState({ err: externalData.error, data: null })\r\n                        }\r\n                    }\r\n                    ).catch((e) => { console.log('canceled') })\r\n                console.log(this.props.query)\r\n            } else {\r\n                this.setState({ err: null, data: null })\r\n                this.props.update([])\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"search-books-results\">\r\n                {(this.state.err) ? (\r\n                    <p>Can't Find Requested Query <strong>{this.props.query}</strong>: </p>\r\n                ) :\r\n                    (!this.state.data && !this.props.query) ? (\r\n                        <p>Please Enter Your Search!</p>\r\n                    ) :\r\n                        (!this.state.data && this.props.query) ? (\r\n                            <p>LOADING ...</p>\r\n                        ) : (\r\n                            <p>search results of <strong>{this.props.query}</strong>: </p>\r\n                        )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GridLoader;","import React, { Fragment } from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport BookShelf from './BookShelf'\r\nimport GridLoader from './GirdLoader'\r\nclass BooksApp extends React.Component {\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(\r\n      (e) => {\r\n        this.setState({ shelfBooks: e });\r\n      }\r\n    );\r\n  }\r\n  searchBookUpdateHandler = (books) => {\r\n    this.setState(curr => ({\r\n      searchBooks: books\r\n    }));\r\n  }\r\n  shelfBookUpdateHandler = (book) => {\r\n    BooksAPI.update(book, book.shelf)\r\n      .then(() => {\r\n        BooksAPI.getAll().then(\r\n          (e) => {\r\n            console.log(e);\r\n            this.setState({ shelfBooks: e });\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  state = {\r\n    shelfBooks: [],\r\n    searchBooks: [],\r\n    query: '',\r\n  }\r\n  updateHandler = (q) => {\r\n    this.setState({ query: q });\r\n\r\n  }\r\n  updateQuery = (query) => {\r\n    new Promise((resolve) => { resolve(1) }).then(() => { this.setState(() => ({ query: query })); }).then(() => {\r\n      BooksAPI.search(query).then(\r\n        (e) => {\r\n          console.log(e);\r\n          this.setState({ searchBooks: e });\r\n        }\r\n      );\r\n    })\r\n\r\n  }\r\n  clearQuery = () => {\r\n    this.updateQuery('')\r\n  }\r\n  updateSearchBooks = (array) => {\r\n    this.setState((curr) => ({\r\n      searchBooks: array\r\n    }));\r\n  }\r\n  render() {\r\n    const shelfNames = [{ shelf: \"currentlyReading\", bookshelf_title: \"Currently Reading\" },\r\n    { shelf: \"wantToRead\", bookshelf_title: \"Want To Read\" },\r\n    { shelf: \"read\", bookshelf_title: \"Read\" }]\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path=\"/\"\r\n          render={({ history }) => (\r\n            <div className=\"list-books\">\r\n              <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n              </div>\r\n              <div className=\"list-books-content\">\r\n                <div>\r\n                  <BookShelf shelfNames={shelfNames} isShelf={true} books={this.state.shelfBooks} updateHandler={this.shelfBookUpdateHandler} />\r\n                </div>\r\n              </div>\r\n              <div className=\"open-search\">\r\n                <Link className=\"link\" onClick={() => { this.setState({ query: '', searchBooks: [] }); history.push('/') }} to={{ pathname: \"/search\" }} >Add a book</Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        />\r\n        <Route exact path=\"/search\"\r\n          render={({ history }) => (\r\n            <Fragment>\r\n              <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                  <Link className=\"close-search\" to={{ pathname: \"/\" }} onClick={() => { history.push('/search') }}>Close</Link>\r\n                  <div className=\"search-books-input-wrapper\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Search by title or author\"\r\n                      value={this.state.query}\r\n                      onChange={e => this.updateHandler(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <GridLoader shelfBooks={this.state.shelfBooks} query={this.state.query} update={(e) => this.updateSearchBooks(e)} />\r\n                <BookShelf isShelf={false} books={this.state.shelfBooks} searchBooks={this.state.searchBooks} updateHandler={this.shelfBookUpdateHandler} />\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render( \n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'))\n"],"sourceRoot":""}